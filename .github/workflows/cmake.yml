name: CMake

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'master'

jobs: 
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 2
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]
    steps:
      - name: Install dependenses
        run: |
          sudo apt install python3
          sudo apt install valgrind
          sudo apt install tree
          pip3 install setuptools
          pip3 install bs4
          pip3 install lxml
          sudo apt install lcov
          sudo apt-get install libgtest-dev
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make
          sudo cp *.a /usr/lib
          sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a
          sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a
          
      - uses: actions/checkout@v2
      
      - id: IZ1
        run: |
          chmod 777 .ci/iif.sh
          result=$(.ci/iif.sh IZ_1)
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}" 
          echo ::set-output name=result::$result
          
      - id: IZ2
        run: |
          chmod 777 .ci/iif.sh
          result=$(.ci/iif.sh IZ_2)
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}" 
          echo ::set-output name=result::$result
          
      - if: ${{ steps.IZ1.outputs.result == 0 }}
        name: iz1-build_tests_gen_rate_valgrind_cppcheck
        shell: bash
        run: |
          mkdir IZ_1/tmp
          cd IZ_1/tmp
          cmake -DTESTS=ON -DENABLE_COVERAGE=ON ..
          make
          ./mainTest
          lcov -t "mainTest" -o mainTest.info -c -d CMakeFiles/
          genhtml -o report mainTest.info
          cd ../..
          cp .ci/gen-html-report.py .
          cp report/index.html .
          /usr/bin/env python3 gen-html-report.py
          valgrind --tool=memcheck --leak-check=full --error-exitcode=1 IZ_1/tmp/mainTest
          git clone https://github.com/danmar/cppcheck.git
          cd cppcheck/
          make
          ./cppcheck --error-exitcode=1 ../IZ_1/  
        
      - id: iz-2-report
        if: ${{ steps.IZ2.outputs.result == 0 }}
        name: iz2-build_tests_gen_rate_valgrind_cppcheck
        shell: bash
        run: |
          mkdir IZ_2/tmp
          cd IZ_2/tmp
          cmake -DENABLE_COVERAGE=ON -DTESTS=ON ..
          make
          cd ..
          python3 make_file.py
          cp text.txt tmp/
          cd tmp 
          ./mainTest
          lcov -t "mainTest" -o mainTest.info -c -d CMakeFiles/
          genhtml -o report mainTest.info
          cd ../..
          cp .ci/gen-html-report.py .
          cp IZ_2/tmp/report/index.html .
          /usr/bin/env python3 gen-html-report.py
          cd IZ_2/tmp/
          cmake -DENABLE_COVERAGE=OFF -DTESTS=OFF ..
          make
          touch cmp.txt
          ./main -t 4 -f text.txt -n 1000000 > cmp.txt
          cmpResult=$(cat cmp.txt)
          cat cmp.txt
          cmpResult="${cmpResult//'%'/'%25'}"
          cmpResult="${cmpResult//$'\n'/'%0A'}"
          cmpResult="${cmpResult//$'\r'/'%0D'}" 
          echo ::set-output name=cmpResult::$cmpResult
          cd ../..
          git clone https://github.com/danmar/cppcheck.git
          cd cppcheck/
          make
          ./cppcheck --error-exitcode=1 ../IZ_2/

      - id: get-comment-body
        run: |
          body=$(cat report.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo ::set-output name=body::$body

      - name: Create commit comment
        uses: peter-evans/commit-comment@v1
        if: ${{ matrix.os == 'ubuntu-16.04' }}
        with:
          body: |
            For 1kk numbers:
            ${{ steps.iz-2-report.outputs.cmpResult }}
            ${{ steps.get-comment-body.outputs.body }}
            All right moves done!
